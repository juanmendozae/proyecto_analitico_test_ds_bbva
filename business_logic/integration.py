# project/business_logic/integration.py

import pandas as pd

class IntegrationTransformer:
    """
    Transformador para la integraci√≥n de datos de diferentes fuentes.
    """
    def integrate_data(self, transactions_df: pd.DataFrame, customers_df: pd.DataFrame, accounts_df: pd.DataFrame) -> pd.DataFrame:
        """
        Une los DataFrames de transacciones, clientes y cuentas seg√∫n el nuevo esquema.

        Args:
            transactions_df (pd.DataFrame): DataFrame de transacciones.
            customers_df (pd.DataFrame): DataFrame de clientes.
            accounts_df (pd.DataFrame): DataFrame de cuentas.

        Returns:
            pd.DataFrame: Un √∫nico DataFrame con toda la informaci√≥n integrada.
        """
        print("üöÄ Iniciando la integraci√≥n de tablas...")
        
        # 1. Unir transacciones con clientes.
        # TODO: Realiza la uni√≥n entre 'transactions_df' y 'customers_df'. 
        # Deber√°s inferir la columna com√∫n a partir del diccionario de datos.
        merged_df = transactions_df.merge(customers_df, on='customer_id', how='left')
        
        # 2. Unir el resultado con cuentas.
        # TODO: Ahora, une 'merged_df' con 'accounts_df'.
        # Infiere la columna de uni√≥n y el tipo de join m√°s adecuado para no perder transacciones.
        full_df = merged_df.merge(accounts_df, on='account_id', how='left')
        
        print("‚úÖ Integraci√≥n completada.")
        return full_df
